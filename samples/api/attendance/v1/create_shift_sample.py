# Code generated by Lark OpenAPI.

import lark_oapi as lark
from lark_oapi.api.attendance.v1 import *


def main():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: CreateShiftRequest = CreateShiftRequest.builder() \
        .request_body(Shift.builder()
                      .shift_name("早班")
                      .punch_times(1)
                      .sub_shift_leader_ids([])
                      .is_flexible(False)
                      .flexible_minutes(60)
                      .flexible_rule([])
                      .no_need_off(True)
                      .punch_time_rule([])
                      .late_off_late_on_rule([])
                      .rest_time_rule([])
                      .overtime_rule([])
                      .build()) \
        .build()

    # 发起请求
    response: CreateShiftResponse = client.attendance.v1.shift.create(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.attendance.v1.shift.create failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


if __name__ == "__main__":
    main()
